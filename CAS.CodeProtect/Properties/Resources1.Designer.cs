//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAS.Lib.CodeProtect.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CAS.Lib.CodeProtect.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Contact {0} {1} {2} {3} for more information&quot;.
        /// </summary>
        public static string AssemblyHelperToString {
            get {
                return ResourceManager.GetString("AssemblyHelperToString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgarde license.
        /// </summary>
        public static string CaptionUpgardeLicense {
            get {
                return ResourceManager.GetString("CaptionUpgardeLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CAS.CommonResources.
        /// </summary>
        public static string CASCommonResources {
            get {
                return ResourceManager.GetString("CASCommonResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DefaultDemo.
        /// </summary>
        public static string DefaultUnlockCode {
            get {
                return ResourceManager.GetString("DefaultUnlockCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to upgrade license:.
        /// </summary>
        public static string ErrorStringUnableToUpgradeLicense {
            get {
                return ResourceManager.GetString("ErrorStringUnableToUpgradeLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to get license from default location, reason:.
        /// </summary>
        public static string ErrStr_GetLicensee_UnableToGetLicenseFrom_default {
            get {
                return ResourceManager.GetString("ErrStr_GetLicensee_UnableToGetLicenseFrom_default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to get license from alternate location, reason:.
        /// </summary>
        public static string ErrStr_GetLicensee_UnableToGetLicenseFrom_isolatedstorage {
            get {
                return ResourceManager.GetString("ErrStr_GetLicensee_UnableToGetLicenseFrom_isolatedstorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to get license for the application, reason:.
        /// </summary>
        public static string ErrStr_GetLicensee_UnableToGetLicenseFrom_web {
            get {
                return ResourceManager.GetString("ErrStr_GetLicensee_UnableToGetLicenseFrom_web", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load the license container ({0})..
        /// </summary>
        public static string ErrStr_InstallLicense_CannotLoadContainer {
            get {
                return ResourceManager.GetString("ErrStr_InstallLicense_CannotLoadContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No license container is available..
        /// </summary>
        public static string ErrStr_InstallLicense_NoContainer {
            get {
                return ResourceManager.GetString("ErrStr_InstallLicense_NoContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no license with the following path available in the container..
        /// </summary>
        public static string ErrStr_InstallLicense_NoLicenseFound {
            get {
                return ResourceManager.GetString("ErrStr_InstallLicense_NoLicenseFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no license for product: {0} in the license container..
        /// </summary>
        public static string ErrStr_InstallLicense_NoLicForProductInContainer {
            get {
                return ResourceManager.GetString("ErrStr_InstallLicense_NoLicForProductInContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no valid product manifest - the product name is unavailable..
        /// </summary>
        public static string ErrStr_InstallLicense_NoManifest {
            get {
                return ResourceManager.GetString("ErrStr_InstallLicense_NoManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No valid path of license is available for opening in container..
        /// </summary>
        public static string ErrStr_InstallLicense_NoPath {
            get {
                return ResourceManager.GetString("ErrStr_InstallLicense_NoPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the license signature is wrong..
        /// </summary>
        public static string ErrStr_OpenLicense_Signature {
            get {
                return ResourceManager.GetString("ErrStr_OpenLicense_Signature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to save license in default location, because of.
        /// </summary>
        public static string ErrStr_SaveLicense_UnableToSaveLicense {
            get {
                return ResourceManager.GetString("ErrStr_SaveLicense_UnableToSaveLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HardwareKeyToken do not match.
        /// </summary>
        public static string ErrStr_UpgardeData_HardwareKeyToken {
            get {
                return ResourceManager.GetString("ErrStr_UpgardeData_HardwareKeyToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to upgrade Issuer information.
        /// </summary>
        public static string ErrStr_UpgardeData_Issuer {
            get {
                return ResourceManager.GetString("ErrStr_UpgardeData_Issuer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LicenseKeyToken do not match.
        /// </summary>
        public static string ErrStr_UpgardeData_LicenseKeyToken {
            get {
                return ResourceManager.GetString("ErrStr_UpgardeData_LicenseKeyToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LicenseUID in the upgrade is empty..
        /// </summary>
        public static string ErrStr_UpgardeData_LicenseUID {
            get {
                return ResourceManager.GetString("ErrStr_UpgardeData_LicenseUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This license has been previously used to upgrade, but can be used only once for this purpose..
        /// </summary>
        public static string ErrStr_UpgardeData_Overupgrade {
            get {
                return ResourceManager.GetString("ErrStr_UpgardeData_Overupgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to upgrade Product information: .
        /// </summary>
        public static string ErrStr_UpgardeData_Product {
            get {
                return ResourceManager.GetString("ErrStr_UpgardeData_Product", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the new license and product name does not match..
        /// </summary>
        public static string ErrStr_UpgardeData_Product_Name {
            get {
                return ResourceManager.GetString("ErrStr_UpgardeData_Product_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  the version of new license does not allow you upgrade the current product license..
        /// </summary>
        public static string ErrStr_UpgardeData_Product_Version {
            get {
                return ResourceManager.GetString("ErrStr_UpgardeData_Product_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to upgrade User information: .
        /// </summary>
        public static string ErrStr_UpgardeData_User {
            get {
                return ResourceManager.GetString("ErrStr_UpgardeData_User", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This functionality is ENABLED..
        /// </summary>
        public static string FunctionConstraint_Allowed {
            get {
                return ResourceManager.GetString("FunctionConstraint_Allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This functionality is DISABLED..
        /// </summary>
        public static string FunctionConstraint_NOTAllowed {
            get {
                return ResourceManager.GetString("FunctionConstraint_NOTAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This item constrains the user to use a selected function. It also has the ability to show the user a link to purchase extended license..
        /// </summary>
        public static string FunctionConstraintDescriptor {
            get {
                return ResourceManager.GetString("FunctionConstraintDescriptor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function Constraint.
        /// </summary>
        public static string FunctionConstraintName {
            get {
                return ResourceManager.GetString("FunctionConstraintName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1250\uc1 \deff0\deflang1045\deflangfe1045{\fonttbl{\f0\froman\fcharset238\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fmodern\fcharset238\fprq1{\*\panose 02070309020205020404}Courier New;}
        ///{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f27\fswiss\fcharset238\fprq2{\*\panose 020b0604030504040204}Tahoma;}
        ///{\f28\fswiss\fcharset128\fprq2{\*\panose 020b0604020202020204}Arial Unicode MS;} [rest of string was truncated]&quot;;.
        /// </summary>
        public static string HowToUlock_docx {
            get {
                return ResourceManager.GetString("HowToUlock_docx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;RSAKeyValue&gt;&lt;Modulus&gt;196GIFXSTTT1SUR/waRmmtrEyDyesQCQbIdQLlKdaDJbKgsBC0aqZMguCxJ2TmSm/vB60t7CrToZiJDY7ugEjV+z8Oe/cO7yKepJZPRzPql9IgZC9yDXsoWFcUPk8iQX76Dg4pMg2MRotCY6PffCZuSbM+1jYXtJoEggKguIFCU=&lt;/Modulus&gt;&lt;Exponent&gt;AQAB&lt;/Exponent&gt;&lt;/RSAKeyValue&gt;.
        /// </summary>
        public static string keys {
            get {
                return ResourceManager.GetString("keys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hi,
        ///I am interested in a new licence, below are my current licensing details:.
        /// </summary>
        public static string License_request_message {
            get {
                return ResourceManager.GetString("License_request_message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License file error:.
        /// </summary>
        public static string LicenseFileError {
            get {
                return ResourceManager.GetString("LicenseFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot get the currently loaded assembly in which the specified {0} class is defined..
        /// </summary>
        public static string LicenseFileErrorAssembly {
            get {
                return ResourceManager.GetString("LicenseFileErrorAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid license cannot be granted for the type of {0} in the product: .
        /// </summary>
        public static string LicenseFileErrorAValidLicense {
            get {
                return ResourceManager.GetString("LicenseFileErrorAValidLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Contact the manufacturer of the component for more information.&quot;.
        /// </summary>
        public static string LicenseFileErrorContactManufacturer {
            get {
                return ResourceManager.GetString("LicenseFileErrorContactManufacturer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;context&quot; parameter  cannot be null..
        /// </summary>
        public static string LicenseFileErrorContext {
            get {
                return ResourceManager.GetString("LicenseFileErrorContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because of:.
        /// </summary>
        public static string LicenseFileErrorIntro {
            get {
                return ResourceManager.GetString("LicenseFileErrorIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is unable to get RSA keys to check license file digital signature..
        /// </summary>
        public static string LicenseFileErrorRSA {
            get {
                return ResourceManager.GetString("LicenseFileErrorRSA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;type&quot; parameter cannot be null..
        /// </summary>
        public static string LicenseFileErrorType {
            get {
                return ResourceManager.GetString("LicenseFileErrorType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type unknown.
        /// </summary>
        public static string LicenseFileErrorTypeUnknown {
            get {
                return ResourceManager.GetString("LicenseFileErrorTypeUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It appears that the date on the computer was changed since the last use of this license. 
        ///The licensing scheme does not allow this..
        /// </summary>
        public static string LicMessageFunctionDataTime {
            get {
                return ResourceManager.GetString("LicMessageFunctionDataTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The failure reason is not provided by the validation process..
        /// </summary>
        public static string LicMessageFunctionNoReason {
            get {
                return ResourceManager.GetString("LicMessageFunctionNoReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This license does not allow you to execute the functionality [0]. You may get an upgrade at: [1].
        /// </summary>
        public static string LicMessageFunctionNotAllowed {
            get {
                return ResourceManager.GetString("LicMessageFunctionNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter Key....
        /// </summary>
        public static string MenuItemText {
            get {
                return ResourceManager.GetString("MenuItemText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the dialog Unlock key to enter 
        ///the key and unlock the software..
        /// </summary>
        public static string MenuItemToolTipText {
            get {
                return ResourceManager.GetString("MenuItemToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CAS..
        /// </summary>
        public static string ProductUnlockCodeStringToRemove {
            get {
                return ResourceManager.GetString("ProductUnlockCodeStringToRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon SecurityUnlock {
            get {
                object obj = ResourceManager.GetObject("SecurityUnlock", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default application that opens:
        ///{0} 
        ///may be mis-configured 
        ///(details: {1}). 
        ///Please navigate to: {0} manually..
        /// </summary>
        public static string SplashScreenDefaultAppMissing {
            get {
                return ResourceManager.GetString("SplashScreenDefaultAppMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start.
        /// </summary>
        public static string SplashScreenStartASMDButtonText {
            get {
                return ResourceManager.GetString("SplashScreenStartASMDButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wait {0}s.
        /// </summary>
        public static string SplashScreenStartButtonFormat {
            get {
                return ResourceManager.GetString("SplashScreenStartButtonFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://store.commsvr.com/.
        /// </summary>
        public static string SplashScreenStoreUrl {
            get {
                return ResourceManager.GetString("SplashScreenStoreUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait while starting {0}. It may take a few seconds..
        /// </summary>
        public static string SplashScreenWaitMessage {
            get {
                return ResourceManager.GetString("SplashScreenWaitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License failure.
        /// </summary>
        public static string Tx_LicCap {
            get {
                return ResourceManager.GetString("Tx_LicCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Program will run in demo version..
        /// </summary>
        public static string Tx_LicDemoModeInfo {
            get {
                return ResourceManager.GetString("Tx_LicDemoModeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are working in demo version - save comand  is not allowed..
        /// </summary>
        public static string Tx_LicDemoWriteErr {
            get {
                return ResourceManager.GetString("Tx_LicDemoWriteErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A suitable license file couldn&apos;t be found..
        /// </summary>
        public static string Tx_LicNoFileErr {
            get {
                return ResourceManager.GetString("Tx_LicNoFileErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to validate the license..
        /// </summary>
        public static string Tx_LicValidationErr {
            get {
                return ResourceManager.GetString("Tx_LicValidationErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  the license volume constrain has been exceeded.
        /// </summary>
        public static string Tx_LicVolumeConstrainErr {
            get {
                return ResourceManager.GetString("Tx_LicVolumeConstrainErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap UAASMDInstallbanner {
            get {
                object obj = ResourceManager.GetObject("UAASMDInstallbanner", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to unlock the software because:  .
        /// </summary>
        public static string UnlockFailureMessge {
            get {
                return ResourceManager.GetString("UnlockFailureMessge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to unlock the software, correct the key and try again..
        /// </summary>
        public static string UnlockFindingLicenseFailureMessage {
            get {
                return ResourceManager.GetString("UnlockFindingLicenseFailureMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlock failure.
        /// </summary>
        public static string UnlockInalationFailureCaption {
            get {
                return ResourceManager.GetString("UnlockInalationFailureCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlock software.
        /// </summary>
        public static string UnlockSuccessCaption {
            get {
                return ResourceManager.GetString("UnlockSuccessCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The software has been unlocked successfully. 
        ///Restart the application to activate it..
        /// </summary>
        public static string UnlockSuccessMessge {
            get {
                return ResourceManager.GetString("UnlockSuccessMessge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Day counter {0} (maximum allowed: {1}).
        /// </summary>
        public static string UsageConstraint_Days {
            get {
                return ResourceManager.GetString("UsageConstraint_Days", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hit counter {0} (maximum allowed: {1}).
        /// </summary>
        public static string UsageConstraint_Hit {
            get {
                return ResourceManager.GetString("UsageConstraint_Hit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage counter {0} (maximum allowed: {1}).
        /// </summary>
        public static string UsageConstraint_Usage {
            get {
                return ResourceManager.GetString("UsageConstraint_Usage", resourceCulture);
            }
        }
    }
}
